##### #read in files 
raw.genecounts = read.table (file = "bulk_RNAseq_raw_counts.txt",header = T,sep = "\t",row.names = 1)

#correct for UMI saturation the log = ln!!!! no log10 no log2 its natural log
raw.genecounts=round(-4096*(log(1-(raw.genecounts/4096))))

#check header
raw.genecounts[1:10,1:10]

#Scale before quantile normalization
raw.genecounts=t(t(raw.genecounts)/colSums(raw.genecounts))*100000

#quantile normalize
raw.genecounts=round(limma::normalizeQuantiles(raw.genecounts))
## import 

metadata <- read.table(file ="3year_epmace.txt" ,header = T ,sep = "\t",row.names = 1) ## read metadata NOTE sep="\t"
metadata <- metadata[ , c(1,2,4)]

####  merge the plaque type
metadata$study_number <- row.names(metadata)
plaque <- read.table(file = "Seurat_clusters_Michal.txt",header = TRUE ,sep = "\t")
metadata <- merge(metadata,plaque,by.x = "study_number") 
metadata <- column_to_rownames(metadata,"study_number") 
#### omit na 
metadata <- na.omit(metadata)
raw.genecounts_selcted <- as.data.frame(raw.genecounts[ ,rownames(metadata)] ) 
raw.genecounts_selcted=na.omit(raw.genecounts_selcted)   ## delete the na values 

#####  DESeq 

dds <- DESeqDataSetFromMatrix(raw.genecounts_selcted ,metadata , design = ~ epmajor_3years) 
keep <- rowSums (counts(dds) ) >= 10
dds <- dds[keep,]
dds <- DESeq(dds)

#####  results  
res <- results(dds,contrast = c("epmajor_3years","Included","Excluded"))

######### plaquetype 0       ########
type0 <- filter(metadata,cluster == 0)
type0 <- na.omit(type0)
raw.genecounts_selcted <- as.data.frame(raw.genecounts[ ,rownames(type0)] ) 
raw.genecounts_selcted=na.omit(raw.genecounts_selcted)   ## delete the na values 

######  volcano plot

res.df <- as.data.frame(res)
res.df$geneid <- rownames(res.df)
#res.df <- res.df %>% 
  #mutate(eng_id = str_split(geneid, "_", simplify = TRUE)[ , 2])
res.df <- res.df %>% 
  mutate(genename = str_split(geneid, "_", simplify = TRUE)[ , 1])

pdf(file = "",width = 6, height = 6)
EnhancedVolcano(res,
                lab = res.df$genename,
                x = 'log2FoldChange',
                y = 'pvalue',
                #xlim = c(-5, 5),
                #ylim = c(0,10),
                title = 'types1',
                subtitle = 'major events yes or no',
                subtitleLabSize = 14,
                pCutoff = 10e-6,
                FCcutoff = 0.4,
                pointSize = 2.0,
                labSize = 2.0,
                drawConnectors = F,
                widthConnectors = 0.5,
                legendPosition = "top")
dev.off()
